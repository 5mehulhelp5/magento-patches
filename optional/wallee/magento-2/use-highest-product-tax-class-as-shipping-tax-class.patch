diff --git a/Model/Service/AbstractLineItemService.php b/Model/Service/AbstractLineItemService.php
index 5510975..d9e44be 100644
--- a/Model/Service/AbstractLineItemService.php
+++ b/Model/Service/AbstractLineItemService.php
@@ -86,6 +86,11 @@ abstract class AbstractLineItemService
      */
     private $productRepository;
 
+    /**
+     * @var \Magento\Tax\Model\Config
+     */
+    protected $taxConfig;
+
     /**
      *
      * @param Helper $helper
@@ -112,6 +117,8 @@ abstract class AbstractLineItemService
         $this->groupRegistry = $groupRegistry;
         $this->eventManager = $eventManager;
         $this->productRepository = $productRepository;
+
+        $this->taxConfig = \Magento\Framework\App\ObjectManager::getInstance()->get(\Magento\Tax\Model\Config::class);
     }
 
     /**
@@ -393,9 +400,16 @@ abstract class AbstractLineItemService
         $customerGroup = $this->groupRegistry->retrieve($entity->getCustomerGroupId());
         $taxRateRequest = $this->taxCalculation->getRateRequest($entity->getShippingAddress(),
             $entity->getBillingAddress(), $customerGroup->getTaxClassId(), $entity->getStore());
-        $shippingTaxClassId = $this->scopeConfig->getValue(
-            \Magento\Tax\Model\Config::CONFIG_XML_PATH_SHIPPING_TAX_CLASS, ScopeInterface::SCOPE_STORE,
-            $entity->getStoreId());
+        
+        // BEGIN PATCH
+        // use the highest product tax class id as shipping tax class id
+
+        // $shippingTaxClassId = $this->scopeConfig->getValue(
+        //    \Magento\Tax\Model\Config::CONFIG_XML_PATH_SHIPPING_TAX_CLASS, ScopeInterface::SCOPE_STORE,
+        //    $entity->getStoreId());
+        $shippingTaxClassId = $this->taxConfig->getShippingTaxClass($entity->getStoreId());
+        // END PATCH
+
         if ($shippingTaxClassId > 0) {
             $shippingTaxClass = $this->taxClassRepository->get($shippingTaxClassId);
             $taxRateRequest->setProductClassId($shippingTaxClassId);
