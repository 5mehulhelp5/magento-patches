Temporary patch prepared by Computop to fix their wallee payment module.

--- a/Model/Service/AbstractLineItemService.php
+++ b/Model/Service/AbstractLineItemService.php
@@ -135,6 +135,11 @@ abstract class AbstractLineItemService
             $items[] = $shippingLineItems;
         }
 
+        $aheadWorksGiftcardLineItem = $this->convertAheadworksGiftcardLineItem($entity);
+        if ($aheadWorksGiftcardLineItem instanceof LineItemCreate) {
+            $items[] = $aheadWorksGiftcardLineItem;
+        }
+
         $transport = new DataObject([
             'items' => $items
         ]);
@@ -178,7 +183,8 @@ abstract class AbstractLineItemService
      */
     private function convertItem($entityItem, $entity)
     {
-        $amountIncludingTax = $entityItem->getRowTotal() - $entityItem->getDiscountAmount() + $entityItem->getTaxAmount() +
+        $entityItemDiscountAmount = $entityItem->getDiscountAmount() > 0 ? $entityItem->getDiscountAmount() : 0;
+        $amountIncludingTax = $entityItem->getRowTotal() - $entityItemDiscountAmount + $entityItem->getTaxAmount() +
             $entityItem->getDiscountTaxCompensationAmount();
 
         $currency = $this->getCurrencyCode($entity);
@@ -409,6 +415,30 @@ abstract class AbstractLineItemService
         }
     }
 
+    /**
+     * Converts the entity's shipping information to a line item.
+     *
+     * @param \Magento\Quote\Model\Quote|\Magento\Sales\Model\Order|\Magento\Sales\Model\Order\Invoice $entity
+     * @return LineItemCreate
+     */
+    protected function convertAheadworksGiftcardLineItem($entity)
+    {
+        $giftCardAmount = $entity->getAwGiftcardAmount();
+        if ($giftCardAmount != null && $giftCardAmount > 0) {
+            $giftCardItem = new LineItemCreate();
+            $giftCardItem->setType(LineItemType::DISCOUNT);
+            $giftCardItem->setUniqueId('giftcard');
+            $giftCardItem->setAmountIncludingTax(
+                $this->helper->roundAmount(-1 * $giftCardAmount, $this->getCurrencyCode($entity)));
+            $giftCardItem->setName($this->helper->fixLength(\__('Gift Card'), 150));
+            $giftCardItem->setQuantity(1);
+            $giftCardItem->setSku('giftcard');
+            return $giftCardItem;
+        } else {
+            return null;
+        }
+    }
+
     /**
      * Gets the unique ID for the line item of the given entity.
      *
@@ -424,4 +454,4 @@ abstract class AbstractLineItemService
      * @return string
      */
     abstract protected function getCurrencyCode($entity);
-}
\ No newline at end of file
+}
