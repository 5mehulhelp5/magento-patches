diff --git a/Model/Webhook/Listener/Refund/SuccessfulCommand.php b/Model/Webhook/Listener/Refund/SuccessfulCommand.php
index 0cd0e36..26298d8 100644
--- a/Model/Webhook/Listener/Refund/SuccessfulCommand.php
+++ b/Model/Webhook/Listener/Refund/SuccessfulCommand.php
@@ -240,9 +240,31 @@ class SuccessfulCommand extends AbstractCommand
                     }
                     break;
                 case LineItemType::FEE:
+                    // BEGIN PATCH
+                    // Add payment fee to $creditmemoAmount. Otherwise, it will be added as adjustment_positive to refund and it will break creation of creditmemo
+                    if ($reduction->getQuantityReduction() > 0 && $order->getPaymentFee()) {
+                        $creditmemoAmount += ($order->getPaymentFee() + $order->getPaymentFeeTax());
+
+                        $paymentFeeTaxDiscount = (float)$order->getPaymentFeeTaxDiscount();
+                        if ($paymentFeeTaxDiscount) {
+                            $creditmemoAmount -= ($order->getPaymentFeeTax() + $order->getPaymentFeeTaxDiscount());
+                        }
+                    }
+                    break;
+                    // END PATCH
                 case LineItemType::DISCOUNT:
                     break;
                 case LineItemType::SHIPPING:
+                    // BEGIN PATCH
+
+                    // Use shipping price without discount
+                    $paymentFeeTaxDiscount = (float)$order->getPaymentFeeTaxDiscount();
+                    if ($paymentFeeTaxDiscount) {
+                        $shippingAmount = $order->getShippingInclTax();
+                        break;
+                    }
+                    // END PATCH
+
                     if ($reduction->getQuantityReduction() > 0) {
                         $shippingAmount = $baseLineItems[$reduction->getLineItemUniqueId()]->getAmountIncludingTax();
                     } elseif ($reduction->getUnitPriceReduction() > 0) {
