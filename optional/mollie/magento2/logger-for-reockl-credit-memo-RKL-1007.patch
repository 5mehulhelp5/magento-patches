diff --git a/Model/Client/Orders.php b/Model/Client/Orders.php
index eeb96b1..3c8e3c8 100644
--- a/Model/Client/Orders.php
+++ b/Model/Client/Orders.php
@@ -700,6 +700,7 @@ class Orders extends AbstractModel
             $creditmemo->getGrandTotal();
         $maximumAmountToRefund = $order->getBaseGrandTotal() - $remainderAmount;
         if ($remainderAmount) {
+            $this->config->addToLog('Refunding order using remainder amount', ['order_id' => $order->getId()]);
             $amount = $grandTotal > $maximumAmountToRefund ? $maximumAmountToRefund : $grandTotal;
 
             $this->refundUsingPayment->execute(
@@ -715,6 +716,8 @@ class Orders extends AbstractModel
         }
 
         if ($this->storeCredit->creditmemoHasStoreCredit($creditmemo)) {
+            $this->config->addToLog('Refunding order using store credit', ['order_id' => $order->getId()]);
+
             $this->refundUsingPayment->execute(
                 $mollieApi,
                 $transactionId,
@@ -738,6 +741,7 @@ class Orders extends AbstractModel
         $shippingCostsLine = $this->orderLines->getShippingFeeItemLineOrder($orderId);
         if ($shippingCostsLine->getId() && $shippingCostsLine->getQtyRefunded() == 0) {
             if ($creditmemo->getShippingAmount() > 0) {
+                $this->config->addToLog('Add shipping to refund', ['order_id' => $order->getId()]);
                 $addShippingToRefund = true;
                 if (abs($creditmemo->getShippingInclTax() - $shippingCostsLine->getTotalAmount()) > 0.01) {
                     $msg = __('Unable to create online refund, as shipping costs do not match');
@@ -767,9 +771,14 @@ class Orders extends AbstractModel
             $payment->update();
 
             if ($order->getState() == Order::STATE_CLOSED) {
+                $this->config->addToLog('Refunding all open items', ['order_id' => $order->getId()]);
                 $mollieOrder->refundAll();
             } else {
                 $orderLines = $this->orderLines->getCreditmemoOrderLines($creditmemo, $addShippingToRefund);
+                $this->config->addToLog('Partially refunding order', [
+                    'order_id' => $order->getId(),
+                    'order_lines' => $orderLines
+                ]);
                 $mollieOrder->refund($orderLines);
             }
         } catch (\Exception $e) {
diff --git a/logger-for-reockl-credit-memo-RKL-1007.patch b/logger-for-reockl-credit-memo-RKL-1007.patch
new file mode 100644
index 0000000..e69de29
