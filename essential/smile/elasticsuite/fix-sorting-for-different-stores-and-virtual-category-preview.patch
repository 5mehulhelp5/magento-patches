Fixed sorting for different stores + fixed virtual category preview

diff --git a/src/module-elasticsuite-virtual-category/Model/Preview.php b/src/module-elasticsuite-virtual-category/Model/Preview.php
index 32efa02..300b0bb 100644
--- a/src/module-elasticsuite-virtual-category/Model/Preview.php
+++ b/src/module-elasticsuite-virtual-category/Model/Preview.php
@@ -121,7 +121,10 @@ class Preview extends AbstractPreview
         $directionFallback = $sortBy !== 'position' ? Collection::SORT_ORDER_ASC : Collection::SORT_ORDER_DESC;

         $collection->setOrder($sortBy, $this->request->getParam('sort_direction', $directionFallback));
-        $collection->addPriceData(self::DEFAULT_CUSTOMER_GROUP_ID, $this->category->getStoreId());
+        // PATCH START
+        //$collection->addPriceData(self::DEFAULT_CUSTOMER_GROUP_ID, $this->category->getStoreId());
+        $collection->addPriceData(self::DEFAULT_CUSTOMER_GROUP_ID, $this->category->getStore()->getWebsiteId());
+        // PATCH END

         return $collection;
     }
@@ -143,7 +146,10 @@ class Preview extends AbstractPreview
     {
         $items = parent::preparePreviewItems($products);

-        if ($this->getSortBy() !== 'position') {
+        // PATCH START
+        // if ($this->getSortBy() !== 'position') {
+        if (!str_contains($this->getSortBy(), 'position')) {
+        // PATCH END
             // In order to sort the product in admin category grid, we need to set the position value
             // if the sort order is different from position because the products are sorted in js.
             // We also disable manual sorting when sort order is not position.
@@ -218,7 +224,10 @@ class Preview extends AbstractPreview
             $useConfig = $this->request->getParam('use_config', []);
             $useConfig = array_key_exists('default_sort_by', $useConfig) && $useConfig['default_sort_by'] == 'true';
             $defaultSortBy = $this->categoryConfig->getProductListDefaultSortBy();
-            $this->sortBy = $useConfig ? $defaultSortBy : $this->request->getParam('default_sort_by');
+            // PATCH START
+            // $this->sortBy = $useConfig ? $defaultSortBy : $this->request->getParam('default_sort_by');
+            $this->sortBy = $useConfig || empty($this->request->getParam('default_sort_by')) ? $defaultSortBy : $this->request->getParam('default_sort_by');
+            // PATCH END
         }

         return $this->sortBy;
