Fixes issue with wrong product image hash generation for multistores with watermarks enabled.
Original CS issue: https://creativestyle.atlassian.net/browse/P2G-1263
Magento issue & patch: https://github.com/magento/magento2/issues/19710#issuecomment-579270288
Must be applied along with m233-fix-product-image-cache-hash-1 and m233-fix-product-image-cache-hash-3, for framework and module-media-storage.

diff --git a/Model/Product/Image/ParamsBuilder.php b/Model/Product/Image/ParamsBuilder.php
index 4a55714..ecdb3b2 100644
--- a/Model/Product/Image/ParamsBuilder.php
+++ b/Model/Product/Image/ParamsBuilder.php
@@ -68,11 +68,12 @@ class ParamsBuilder
      * Build image params
      *
      * @param array $imageArguments
+     * @param int $scopeId
      * @return array
      * @SuppressWarnings(PHPMD.NPathComplexity)
      * @SuppressWarnings(PHPMD.CyclomaticComplexity)
      */
-    public function build(array $imageArguments): array
+    public function build(array $imageArguments, int $scopeId = null): array
     {
         $miscParams = [
             'image_type' => $imageArguments['type'] ?? null,
@@ -81,7 +82,7 @@ class ParamsBuilder
         ];
 
         $overwritten = $this->overwriteDefaultValues($imageArguments);
-        $watermark = isset($miscParams['image_type']) ? $this->getWatermark($miscParams['image_type']) : [];
+        $watermark = isset($miscParams['image_type']) ? $this->getWatermark($miscParams['image_type'], $scopeId) : [];
 
         return array_merge($miscParams, $overwritten, $watermark);
     }
@@ -117,30 +118,38 @@ class ParamsBuilder
      * Get watermark
      *
      * @param string $type
+     * @param int $scopeId
      * @return array
      */
-    private function getWatermark(string $type): array
+    private function getWatermark(string $type, int $scopeId = null): array
     {
         $file = $this->scopeConfig->getValue(
             "design/watermark/{$type}_image",
-            ScopeInterface::SCOPE_STORE
+            ScopeInterface::SCOPE_STORE,
+            $scopeId
         );
 
         if ($file) {
-            $size = $this->scopeConfig->getValue(
-                "design/watermark/{$type}_size",
-                ScopeInterface::SCOPE_STORE
+            $size = explode(
+                'x',
+                (string) $this->scopeConfig->getValue(
+                    "design/watermark/{$type}_size",
+                    ScopeInterface::SCOPE_STORE,
+                    $scopeId
+                )
             );
             $opacity = $this->scopeConfig->getValue(
                 "design/watermark/{$type}_imageOpacity",
-                ScopeInterface::SCOPE_STORE
+                ScopeInterface::SCOPE_STORE,
+                $scopeId
             );
             $position = $this->scopeConfig->getValue(
                 "design/watermark/{$type}_position",
-                ScopeInterface::SCOPE_STORE
+                ScopeInterface::SCOPE_STORE,
+                $scopeId
             );
-            $width = !empty($size['width']) ? $size['width'] : null;
-            $height = !empty($size['height']) ? $size['height'] : null;
+            $width = !empty($size['0']) ? $size['0'] : null;
+            $height = !empty($size['1']) ? $size['1'] : null;
 
             return [
                 'watermark_file' => $file,
