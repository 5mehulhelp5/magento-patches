diff --git a/src/Rewards/Helper/Balance/Spend.php b/src/Rewards/Helper/Balance/Spend.php
index d713e22..f8e66a3 100644
--- a/src/Rewards/Helper/Balance/Spend.php
+++ b/src/Rewards/Helper/Balance/Spend.php
@@ -256,6 +256,13 @@ class Spend extends \Magento\Framework\App\Helper\AbstractHelper
     {
         if ($this->isRewardsIncludeTax()) {
             $subtotal = $quote->getBaseGrandTotal();
+
+            // BEGIN PATCH
+            $rules = $this->spendRulesHelper->getRules($quote);
+            foreach ($rules as $rule) {
+                $subtotal = $this->getLimitedSubtotal($quote, $rule);
+            }
+            //END PATCH
         } else {
             $subtotal = $quote->getBaseSubtotalWithDiscount();
             if ($this->config->getGeneralIsSpendShipping() && !$quote->isVirtual()) {
@@ -306,12 +313,17 @@ class Spend extends \Magento\Framework\App\Helper\AbstractHelper
 
             if ($rule->getActions()->validate($item)) {
                 if ($priceIncludesTax) {
-                    $itemPrice = $item->getBasePrice();
-                    if ($this->isRewardsIncludeTax()) {
-                        $itemPrice = $item->getBasePriceInclTax();
-                    }
-                    $itemPrice += (float)$item->getWeeeTaxAppliedAmountInclTax();
-                    $itemPrice = $itemPrice * $item->getQty() - $item->getBaseDiscountAmount();
+                    // BEGIN PATCH
+                    // Always use full item price, do not add discount to it
+
+                    // $itemPrice = $item->getBasePrice();
+                    // if ($this->isRewardsIncludeTax()) {
+                    //     $itemPrice = $item->getBasePriceInclTax();
+                    // }
+                    // $itemPrice += (float)$item->getWeeeTaxAppliedAmountInclTax();
+                    // $itemPrice = $itemPrice * $item->getQty() - $item->getBaseDiscountAmount();
+                    $itemPrice = $item->getRowTotalInclTax();
+                    // END PATCH
                 } else {
                     $itemPrice = $item->getBasePrice() * $item->getQty() - $item->getBaseDiscountAmount();
                 }
diff --git a/src/Rewards/Service/Discount/ItemDiscountService.php b/src/Rewards/Service/Discount/ItemDiscountService.php
index 430d0d1..47a34e9 100644
--- a/src/Rewards/Service/Discount/ItemDiscountService.php
+++ b/src/Rewards/Service/Discount/ItemDiscountService.php
@@ -71,6 +71,8 @@ class ItemDiscountService
 
     private $taxData;
 
+    protected $ruleCollectionFactory;
+
     public function __construct(
         SpendHelper $spendHelper,
         PurchaseHelper $rewardsPurchase,
@@ -81,6 +83,7 @@ class ItemDiscountService
         TaxCalculation $taxCalculation,
         TaxConfig $taxConfig,
         TaxDataHelper $taxData
+        , ?\Magento\SalesRule\Model\ResourceModel\Rule\CollectionFactory $ruleCollectionFactory = null
     ) {
         $this->spendHelper      = $spendHelper;
         $this->rewardsPurchase  = $rewardsPurchase;
@@ -91,6 +94,8 @@ class ItemDiscountService
         $this->taxCalculation   = $taxCalculation;
         $this->taxConfig        = $taxConfig;
         $this->taxData          = $taxData;
+
+        $this->ruleCollectionFactory = $ruleCollectionFactory ?? \Magento\Framework\App\ObjectManager::getInstance()->get(\Magento\SalesRule\Model\ResourceModel\Rule\CollectionFactory::class);
     }
 
     /**
@@ -122,7 +127,10 @@ class ItemDiscountService
 
             $this->process();
         }
-        $this->config->setDisableRewardsCalculation(false);
+        // BEGIN PATCH
+        // Disabled flag because it stops discount calculation for additional fees
+        // $this->config->setDisableRewardsCalculation(false);
+        // END PATCH
 
         \Magento\Framework\Profiler::stop(__CLASS__ . ':' . __METHOD__);
     }
@@ -143,7 +151,11 @@ class ItemDiscountService
         $purchase = $this->rewardsPurchase->getByQuote($quote);
 
         if ($purchase && $purchase->getSpendAmount() > 0) {
-            $descriptions[] = $this->rewardsData->getPointsName();
+            // BEGIN PATCH
+            // Add amount of spend points to the description
+            // $descriptions[] = $this->rewardsData->getPointsName();
+            $descriptions[] = $this->rewardsData->formatPoints($purchase->getSpendPoints());
+            // END PATCH
         }
 
         $address->setDiscountDescriptionArray($descriptions);
@@ -271,6 +283,12 @@ class ItemDiscountService
         $purchase        = $this->rewardsPurchase->getByQuote($this->item->getQuote());
         $baseSpendAmount = $purchase->getSpendAmount();
 
+        // BEGIN PATCH
+        // In some cases, module returns value with applied reward point discount and in some cases without (when additional discount is added and grandTotal == 0)
+        $quote = $this->item->getQuote();
+        $baseSpendAmount = $this->adjustBaseSpendAmount($quote, $baseSpendAmount);
+        // END PATCH
+
         if (!$baseTotal) {
             $baseTotal = $total;
         }
@@ -297,6 +315,30 @@ class ItemDiscountService
         ];
     }
 
+    // BEGIN PATCH
+    // Method to adjust reward points variable - baseSpendAmount. This value contain grand total with all discounts without reward point discount
+    protected function adjustBaseSpendAmount($quote, $baseSpendAmount)
+    {
+        $cartFixedRules = $quote->getCartFixedRules();
+
+        if (empty($cartFixedRules)) {
+            return $baseSpendAmount;
+        }
+
+        $grandTotal = $quote->getGrandTotal();
+        $subtotalWithoutDiscount = $grandTotal + ($quote->getSubtotal() - $quote->getSubtotalWithDiscount());
+
+        $ruleCollection = $this->ruleCollectionFactory->create();
+        $ruleCollection->addFieldToFilter('rule_id', ['in' => array_keys($cartFixedRules)]);
+
+        foreach ($ruleCollection as $rule) {
+            $subtotalWithoutDiscount -= $rule->getDiscountAmount();
+        }
+
+        return min($baseSpendAmount, $subtotalWithoutDiscount);
+    }
+    // END PATCH
+
 
     /**
      * We need this because Faonni_Price changes total without basetotal
