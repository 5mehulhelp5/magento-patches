Fixing issue with cleaning product cache for all product after update and reindex blog posts.
Now only cache for related products will be cleaned.

--- a/Model/Post.php
+++ b/Model/Post.php
@@ -581,8 +581,11 @@ class Post extends AbstractModel implements PostInterface, IdentityInterface
         if ($this->_appState->getAreaCode() == \Magento\Framework\App\Area::AREA_FRONTEND) {
             $identities[] = self::CACHE_TAG;
         }
-        if (is_array($this->getRelatedProductIds()) && count($this->getRelatedProductIds())) {
-            $identities[] = CatalogProduct::CACHE_TAG;
+        $relatedProductIds = $this->getRelatedProductIds();
+        if (is_array($relatedProductIds) && count($relatedProductIds)) {
+            foreach ($relatedProductIds as $relatedProductId) {
+                $identities[] = \Magento\Catalog\Model\Product::CACHE_TAG . '_' . $relatedProductId;
+            }
         }
         return $identities;
     }
--- a/Model/ResourceModel/Indexer/ProductPost.php
+++ b/Model/ResourceModel/Indexer/ProductPost.php
@@ -176,12 +176,16 @@ class ProductPost extends AbstractResource implements IdentityInterface
      */
     public function getIdentities()
     {
-        $identities = [Product::CACHE_TAG];
+        $identities = [];
         foreach ($this->entities as $entity) {
             $postTag = Post::CACHE_TAG . '_' . $entity['post_id'];
-            if (false === array_search($postTag, $identities)) {
+            if (!in_array($postTag, $identities)) {
                 $identities[] = $postTag;
             }
+            $productTag = \Magento\Catalog\Model\Product::CACHE_TAG . '_' . $entity['product_id'];
+            if (!in_array($productTag, $identities)) {
+                $identities[] = $productTag;
+            }
         }
         return $identities;
     }
