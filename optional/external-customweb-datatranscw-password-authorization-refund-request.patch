diff --git a/Customweb/Datatrans/BackendOperation/Adapter/RefundRequestBuilder.php b/Customweb/Datatrans/BackendOperation/Adapter/RefundRequestBuilder.php
index 17c4715..75a3a98 100644
--- a/Customweb/Datatrans/BackendOperation/Adapter/RefundRequestBuilder.php
+++ b/Customweb/Datatrans/BackendOperation/Adapter/RefundRequestBuilder.php
@@ -29,9 +29,15 @@ class Customweb_Datatrans_BackendOperation_Adapter_RefundRequestBuilder extends
 {
 	private $amount;
 
+    /**
+     * @var \Creativestyle\CustomizationTitoloRaffle\Helper\Datatrans\Configuration
+     */
+    protected $datatransConfiguration;
+
 	public function __construct($transaction, $configuration, $amount) {
 		parent::__construct($transaction, $configuration);
 		$this->amount = $amount;
+        $this->datatransConfiguration = \Magento\Framework\App\ObjectManager::getInstance()->get(\Creativestyle\CustomizationTitoloRaffle\Helper\Datatrans\Configuration::class);
 	}
 
 	public function buildRequest() {
@@ -59,6 +65,15 @@ class Customweb_Datatrans_BackendOperation_Adapter_RefundRequestBuilder extends
 		$xmlRequest->addParameter('transtype', '06');
 		$xmlRequest->setReferenceNumber($authorizationParameters['refno']);
 		Customweb_Datatrans_Util::signXmlRequest($this->getConfiguration(), $xmlRequest);
+
+        $merchantId = $this->datatransConfiguration->getMerchantId();
+        $password = $this->datatransConfiguration->getPassword();
+
+        if ($merchantId && $password) {
+            $auth = new Customweb_Core_Http_Authorization_Basic($merchantId, $password);
+            $xmlRequest->addParameter('Authorization', $auth->getHeaderFieldValue());
+        }
+        
 		return $xmlRequest;
 
 	}
diff --git a/Customweb/Datatrans/Util.php b/Customweb/Datatrans/Util.php
index 15bca27..5f83da5 100644
--- a/Customweb/Datatrans/Util.php
+++ b/Customweb/Datatrans/Util.php
@@ -203,6 +203,15 @@ final class Customweb_Datatrans_Util {
 		$request->setBody($xmlRequest->toXml());
 		$request->setMethod('POST');
 		$request->appendCustomHeaders(array('Content-Type' => 'application/xml'));
+
+        $parameters = $xmlRequest->getParameters();
+
+        if (isset($parameters['Authorization'])) {
+            $request->appendCustomHeaders(
+                ['Authorization' => $parameters['Authorization']]
+            );
+        }
+
 		$logger->logDebug("Sending XML request", $request);
 		$request->send();
 		$handler = $request->getResponseHandler();
