diff --git a/dotmailer-address-validator-widget-fix.patch b/dotmailer-address-validator-widget-fix.patch
new file mode 100644
index 0000000..69c8a2d
--- /dev/null
+++ b/dotmailer-address-validator-widget-fix.patch
@@ -0,0 +1,73 @@
+diff --git a/view/frontend/web/js/telephoneValidatorAddress.js b/view/frontend/web/js/telephoneValidatorAddress.js
+index b75c9a8..5ecfb22 100644
+--- a/view/frontend/web/js/telephoneValidatorAddress.js
++++ b/view/frontend/web/js/telephoneValidatorAddress.js
+@@ -1,19 +1,23 @@
+ define([
+     'jquery',
+-    'intlTelInput'
++    'intlTelInput',
++    'jquery/validate'
+ ], function ($, intlTelInput) {
+     'use strict';
+ 
+-    return function () {
+-
+-        const errorMap = ['Invalid telephone number', 'Invalid country code', 'Telephone number is too short', 'Telephone number is too long', 'Invalid telephone number'];
+-
+-        let validatorObj = {
+-            /**
+-             * @param {String} value
+-             */
++    var errorMap = [
++            'Invalid telephone number',
++            'Invalid country code',
++            'Telephone number is too short',
++            'Telephone number is too long',
++            'Invalid telephone number'
++        ],
++        validatorObj = {
+             validate: function (value) {
+-                let countryCodeClass = $('.iti__selected-flag .iti__flag').attr('class');
++                var countryCodeClass = $('.iti__selected-flag .iti__flag').attr('class'),
++                    countryCode,
++                    isValid;
++
+                 countryCodeClass = countryCodeClass.split(' ')[1];
+ 
+                 if (countryCodeClass === undefined) {
+@@ -22,8 +26,8 @@ define([
+                     return false;
+                 }
+ 
+-                let countryCode = countryCodeClass.split('__')[1];
+-                let isValid = intlTelInputUtils.isValidNumber(value, countryCode);
++                countryCode = countryCodeClass.split('__')[1];
++                isValid = intlTelInputUtils.isValidNumber(value, countryCode);
+ 
+                 if (!isValid) {
+                     $.validator.messages['validate-phone-number'] = errorMap[
+@@ -33,12 +37,15 @@ define([
+ 
+                 return isValid;
+             }
+-        }
++        };
++
++    $.validator.addMethod(
++        'validate-phone-number',
++        validatorObj.validate,
++        $.validator.messages['validate-phone-number']
++    );
+ 
+-        $.validator.addMethod(
+-            'validate-phone-number',
+-            validatorObj.validate,
+-            $.validator.messages['validate-phone-number']
+-        );
++    return function (widget) {
++        return widget;
+     };
+-});
++});
+\ No newline at end of file
diff --git a/view/frontend/web/js/setAdditionalParams.js b/view/frontend/web/js/setAdditionalParams.js
index 73eec1c..ccfaf98 100644
--- a/view/frontend/web/js/setAdditionalParams.js
+++ b/view/frontend/web/js/setAdditionalParams.js
@@ -17,7 +17,7 @@ define([
                     uid: this.uid
                 };
             }
-            this._super();
+            return this._super();
         }
     };
 
diff --git a/view/frontend/web/js/telephoneValidatorAddress.js b/view/frontend/web/js/telephoneValidatorAddress.js
index b75c9a8..5ecfb22 100644
--- a/view/frontend/web/js/telephoneValidatorAddress.js
+++ b/view/frontend/web/js/telephoneValidatorAddress.js
@@ -1,19 +1,23 @@
 define([
     'jquery',
-    'intlTelInput'
+    'intlTelInput',
+    'jquery/validate'
 ], function ($, intlTelInput) {
     'use strict';
 
-    return function () {
-
-        const errorMap = ['Invalid telephone number', 'Invalid country code', 'Telephone number is too short', 'Telephone number is too long', 'Invalid telephone number'];
-
-        let validatorObj = {
-            /**
-             * @param {String} value
-             */
+    var errorMap = [
+            'Invalid telephone number',
+            'Invalid country code',
+            'Telephone number is too short',
+            'Telephone number is too long',
+            'Invalid telephone number'
+        ],
+        validatorObj = {
             validate: function (value) {
-                let countryCodeClass = $('.iti__selected-flag .iti__flag').attr('class');
+                var countryCodeClass = $('.iti__selected-flag .iti__flag').attr('class'),
+                    countryCode,
+                    isValid;
+
                 countryCodeClass = countryCodeClass.split(' ')[1];
 
                 if (countryCodeClass === undefined) {
@@ -22,8 +26,8 @@ define([
                     return false;
                 }
 
-                let countryCode = countryCodeClass.split('__')[1];
-                let isValid = intlTelInputUtils.isValidNumber(value, countryCode);
+                countryCode = countryCodeClass.split('__')[1];
+                isValid = intlTelInputUtils.isValidNumber(value, countryCode);
 
                 if (!isValid) {
                     $.validator.messages['validate-phone-number'] = errorMap[
@@ -33,12 +37,15 @@ define([
 
                 return isValid;
             }
-        }
+        };
+
+    $.validator.addMethod(
+        'validate-phone-number',
+        validatorObj.validate,
+        $.validator.messages['validate-phone-number']
+    );
 
-        $.validator.addMethod(
-            'validate-phone-number',
-            validatorObj.validate,
-            $.validator.messages['validate-phone-number']
-        );
+    return function (widget) {
+        return widget;
     };
-});
+});
\ No newline at end of file
