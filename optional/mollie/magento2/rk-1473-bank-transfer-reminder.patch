diff --git a/Cron/RemoveSentPaymentReminders.php b/Cron/RemoveSentPaymentReminders.php
index 1f4ebe5..6c772e9 100644
--- a/Cron/RemoveSentPaymentReminders.php
+++ b/Cron/RemoveSentPaymentReminders.php
@@ -61,7 +61,10 @@ class RemoveSentPaymentReminders
     protected function deletePaymentReminders(): void
     {
         do {
-            $date = (new \DateTimeImmutable($this->dateTime->gmtDate()))->sub(new \DateInterval('P1W'));
+            // PATCH BEGIN
+            // $date = (new \DateTimeImmutable($this->dateTime->gmtDate()))->sub(new \DateInterval('P1W'));
+            $date = (new \DateTimeImmutable($this->dateTime->gmtDate()))->sub(new \DateInterval('P2W'));
+            // PATCH END
             $this->builder->addFilter(Order::CREATED_AT, $date, 'lt');
             $this->builder->setPageSize(10);
 
diff --git a/Model/Adminhtml/Source/SecondChanceEmailDelay.php b/Model/Adminhtml/Source/SecondChanceEmailDelay.php
index 2905471..fecedcd 100644
--- a/Model/Adminhtml/Source/SecondChanceEmailDelay.php
+++ b/Model/Adminhtml/Source/SecondChanceEmailDelay.php
@@ -13,18 +13,55 @@ class SecondChanceEmailDelay implements OptionSourceInterface
     public function toOptionArray()
     {
         $output = [];
+        // PATCH BEGIN
+        //$output[] = [
+        //    'label' => __('1 hours'),
+        //    'value' => 1,
+        //];
+        //
+        //for ($i = 2; $i <= 8; $i++) {
+        //    $output[] = [
+        //        'label' => __('%1 hours', $i),
+        //        'value' => $i,
+        //    ];
+        //}
         $output[] = [
-            'label' => __('1 hours'),
+            'label' => __('No delay (instant email) - only for testing purposes'),
+            'value' => 0,
+        ];
+
+        $output[] = [
+            'label' => __('1 hour'),
             'value' => 1,
         ];
 
-        for ($i = 2; $i <= 8; $i++) {
+        for ($i = 2; $i < 8; $i++) {
+            $output[] = [
+                'label' => __('%1 hours', $i),
+                'value' => $i,
+            ];
+        }
+
+        for ($i = 8; $i < 24; $i += 4) {
             $output[] = [
                 'label' => __('%1 hours', $i),
                 'value' => $i,
             ];
         }
 
+        $output[] = [
+            'label' => __('1 day'),
+            'value' => 24,
+        ];
+
+        for ($i = 48; $i <= 336; $i += 24) {
+            $output[] = [
+                'label' => __('%1 days', $i / 24),
+                'value' => $i,
+            ];
+        }
+        // PATCH END
+
         return $output;
     }
-}
\ No newline at end of file
+}
diff --git a/Service/Order/SecondChanceEmail.php b/Service/Order/SecondChanceEmail.php
index 8c3afb1..81cd82d 100644
--- a/Service/Order/SecondChanceEmail.php
+++ b/Service/Order/SecondChanceEmail.php
@@ -141,6 +141,22 @@ class SecondChanceEmail
             $token = $this->paymentToken->forOrder($order);
         }
 
+        // PATCH BEGIN
+        //return [
+        //    'link' => $this->getUrl($order, $token),
+        //    'customer' => [
+        //        'name' => $order->getCustomerName(),
+        //        'email' => $order->getCustomerEmail(),
+        //    ],
+        //    'order' => $order,
+        //    'order_id' => $order->getEntityId(),
+        //    'store' => $this->storeManager->getStore($order->getStoreId()),
+        //    'payment_token' => $token->getToken(),
+        //];
+        $additionalInfo = $order->getPayment()->getAdditionalInformation();
+        $details = $additionalInfo['details'] ?? '{}';
+        $paymentReference = json_decode($details, true)['transferReference'] ?? '-';
+
         return [
             'link' => $this->getUrl($order, $token),
             'customer' => [
@@ -151,7 +167,9 @@ class SecondChanceEmail
             'order_id' => $order->getEntityId(),
             'store' => $this->storeManager->getStore($order->getStoreId()),
             'payment_token' => $token->getToken(),
+            'payment_reference' => $paymentReference,
         ];
+        // PATCH END
     }
 
     /**
