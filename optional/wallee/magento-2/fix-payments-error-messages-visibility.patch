This patch fixes issue with error messages visibility in wallee payment methods [HAAR-4361].
See reported issue: https://github.com/wallee-payment/magento-2/issues/41

diff --git a/view/frontend/web/js/view/payment/method-renderer/wallee-method.js b/view/frontend/web/js/view/payment/method-renderer/wallee-method.js
index ab0b601..9f57c3d 100644
--- a/view/frontend/web/js/view/payment/method-renderer/wallee-method.js
+++ b/view/frontend/web/js/view/payment/method-renderer/wallee-method.js
@@ -50,6 +50,9 @@ define([
 				//until the user selects the payment method by clicking on the icon.
 				//These lines allow to trigger the iframe to show it by default if there is only one payment method active.
 				if (methods !== null && methods.length === 1) {
+                    // BEGIN PATCH
+                    this.cleanupMessagesComponents();
+                    // END PATCH
 					this.checkoutHandler.updateAddresses(this._super.bind(this));
 				}
 				
@@ -64,6 +67,9 @@ define([
 					let checkboxId = this.getCode();
 					let checkoutHandler = this.checkoutHandler;
 					var updateAddressesCallback = function() {
+                        // BEGIN PATCH
+                        _this.cleanupMessagesComponents();
+                        // END PATCH
 						checkoutHandler.updateAddresses(_super.bind(_this));	
 					};
 					let intervalId = setInterval(function () {
@@ -150,6 +156,9 @@ define([
 		
 		selectPaymentMethod: function(){
 			if (this.checkoutHandler) {
+                // BEGIN PATCH
+                this.cleanupMessagesComponents();
+                // END PATCH
 				this.checkoutHandler.updateAddresses(this._super.bind(this));
 				return true;
 			} else {
@@ -241,6 +250,16 @@ define([
 		
 		stripHtml: function(input){
 			return $('<div>' + input + '</div>').text();
-		}
+		},
+        // BEGIN PATCH
+        cleanupMessagesComponents: function() {
+            const childComponents = this.elems() || [];
+            childComponents.forEach(component => {
+                if (component.displayArea === 'messages') {
+                    component.destroy();
+                }
+            });
+        },
+        // END PATCH
 	});
 });
\ No newline at end of file
