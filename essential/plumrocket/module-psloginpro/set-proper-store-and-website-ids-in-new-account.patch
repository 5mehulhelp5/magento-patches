This patch is fixing two issues:
- New customer account is created in the wrong store when it is created from a social network.
- Website ID and Store ID are not set in customer entity which causing issues with 3rd party modules like Mailchimp.
Related tickets: IPET-2544, IPET-2641

diff --git a/Controller/Account/Login.php b/Controller/Account/Login.php
index 90cde2a..b50ac6e 100644
--- a/Controller/Account/Login.php
+++ b/Controller/Account/Login.php
@@ -421,7 +421,10 @@ class Login extends \Magento\Framework\App\Action\Action
                         $customer,
                         EmailNotificationInterface::NEW_ACCOUNT_EMAIL_REGISTERED,
                         '',
-                        $this->storeManager->getStore()->getId()
+                        // BEGIN PATCH
+                        //$this->storeManager->getStore()->getId()
+                        $this->apiCallParamsPersistor->get('current_store_id')
+                        // END PATCH
                     );
                 }

diff --git a/Controller/Account/Register.php b/Controller/Account/Register.php
index ca0bb20..3262fd1 100644
--- a/Controller/Account/Register.php
+++ b/Controller/Account/Register.php
@@ -237,7 +237,10 @@ class Register extends \Magento\Framework\App\Action\Action
                     $customer,
                     EmailNotificationInterface::NEW_ACCOUNT_EMAIL_REGISTERED,
                     '',
-                    $this->storeManager->getStore()->getId()
+                    // BEGIN PATCH
+                    //$this->storeManager->getStore()->getId()
+                    $this->apiCallParamsPersistor->get('current_store_id')
+                    // END PATCH
                 );
             }

diff --git a/Controller/Modal/InitOauth.php b/Controller/Modal/InitOauth.php
index fef6be1..c900cde 100644
--- a/Controller/Modal/InitOauth.php
+++ b/Controller/Modal/InitOauth.php
@@ -168,6 +168,11 @@ class InitOauth implements ActionInterface
         $redirectResult = $this->resultFactory->create(ResultFactory::TYPE_REDIRECT);

         try {
+            // BEGIN PATCH
+            $this->apiCallParamsPersistor->add('current_website_id', $this->request->getParam('current_website_id'));
+            $this->apiCallParamsPersistor->add('current_store_id', $this->request->getParam('current_store_id'));
+            // END PATCH
+
             $this->apiCallParamsPersistor->add('store', (int) $this->storeManager->getStore()->getId());
             $this->apiCallParamsPersistor->add('referer_url', $this->lastViewedPageProvider->getUrl());
             $this->apiCallParamsPersistor->addQuoteId((int) $this->checkoutSession->getQuoteId());
diff --git a/Model/Customer/CreateFromNetworkAccount.php b/Model/Customer/CreateFromNetworkAccount.php
index 24b65a8..620fd80 100644
--- a/Model/Customer/CreateFromNetworkAccount.php
+++ b/Model/Customer/CreateFromNetworkAccount.php
@@ -69,6 +69,10 @@ class CreateFromNetworkAccount implements CreateCustomerFromNetworkAccountInterf
      */
     private $config;

+    //BEGIN PATCH
+    protected \Plumrocket\SocialLoginPro\Model\Network\ApiCallParamsPersistorInterface $apiCallParamsPersistor;
+    //END PATCH
+
     /**
      * @param \Magento\Customer\Model\CustomerFactory                         $customerFactory
      * @param \Magento\Eav\Model\Config                                       $eavConfig
@@ -87,7 +91,8 @@ class CreateFromNetworkAccount implements CreateCustomerFromNetworkAccountInterf
         CustomerRepositoryInterface $customerRepository,
         FakeDataGenerator $fakeDataGenerator,
         EmailValidator $emailValidator,
-        Config $config
+        Config $config,
+        \Plumrocket\SocialLoginPro\Model\Network\ApiCallParamsPersistorInterface $apiCallParamsPersistor
     ) {
         $this->customerFactory = $customerFactory;
         $this->eavConfig = $eavConfig;
@@ -97,6 +102,9 @@ class CreateFromNetworkAccount implements CreateCustomerFromNetworkAccountInterf
         $this->fakeDataGenerator = $fakeDataGenerator;
         $this->emailValidator = $emailValidator;
         $this->config = $config;
+        // PATCH BEGIN
+        $this->apiCallParamsPersistor = $apiCallParamsPersistor;
+        // PATCH END
     }

     /**
@@ -122,6 +130,11 @@ class CreateFromNetworkAccount implements CreateCustomerFromNetworkAccountInterf
         $customer->setData('is_active', 1);
         $customer->getGroupId();

+        // PATCH BEGIN
+        $customer->setWebsiteId($this->apiCallParamsPersistor->get('current_website_id'));
+        $customer->setStoreId($this->apiCallParamsPersistor->get('current_store_id'));
+        // END BEGIN
+
         if (isset($password)) {
             $customer->setPassword($password);
             $customer->setPasswordConfirmation($password);
diff --git a/Model/Network/DefaultButtonsResolver.php b/Model/Network/DefaultButtonsResolver.php
index 3201f09..5ddd05a 100644
--- a/Model/Network/DefaultButtonsResolver.php
+++ b/Model/Network/DefaultButtonsResolver.php
@@ -46,6 +46,10 @@ class DefaultButtonsResolver implements NetworkButtonResolverInterface
      */
     private $accountProvider;

+    //BEGIN PATCH
+    protected \Magento\Store\Model\StoreManagerInterface $storeManager;
+    //END PATCH
+
     /**
      * @param \Magento\Store\Model\Store                                  $store
      * @param \Plumrocket\SocialLoginPro\Helper\Config\Network            $networkConfig
@@ -58,13 +62,17 @@ class DefaultButtonsResolver implements NetworkButtonResolverInterface
         NetworkConfig $networkConfig,
         Button $buttonConfig,
         ButtonFactory $buttonFactory,
-        AccountProviderInterface $accountProvider
+        AccountProviderInterface $accountProvider,
+        \Magento\Store\Model\StoreManagerInterface $storeManager
     ) {
         $this->store = $store;
         $this->networkConfig = $networkConfig;
         $this->buttonConfig = $buttonConfig;
         $this->buttonFactory = $buttonFactory;
         $this->accountProvider = $accountProvider;
+        // PATCH BEGIN
+        $this->storeManager = $storeManager;
+        // PATCH END
     }

     /**
@@ -177,9 +185,16 @@ class DefaultButtonsResolver implements NetworkButtonResolverInterface
      */
     private function getUrl(string $networkCode, string $customerAction, array $params = []): string
     {
+        // BEGIN PATCH
+        $store = $this->storeManager->getStore();
+        // END PATCH
         $uriParams = [
             'type' => $networkCode,
-            'refresh' => time()
+            'refresh' => time(),
+            // BEGIN PATCH
+            'current_store_id' => $store->getId(),
+            'current_website_id' => $store->getWebsiteId()
+            // END PATCH
         ];

         if (! empty($customerAction)) {
