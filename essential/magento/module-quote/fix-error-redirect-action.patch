https://github.com/magento/magento2/issues/38907

diff --git a/Model/QuoteValidator.php b/Model/QuoteValidator.php
index 87d010d..fe333d8 100644
--- a/Model/QuoteValidator.php
+++ b/Model/QuoteValidator.php
@@ -47,7 +47,9 @@ class QuoteValidator
     /**
      * @var RestResponse
      */
-    private $_response;
+    // PATCH START
+    //private $_response;
+    // PATCH END

     /**
      * QuoteValidator constructor.
@@ -55,13 +57,14 @@ class QuoteValidator
      * @param AllowedCountries|null $allowedCountryReader
      * @param OrderAmountValidationMessage|null $minimumAmountMessage
      * @param QuoteValidationRuleInterface|null $quoteValidationRule
-     * @param RestResponse|null $response
      */
     public function __construct(
         AllowedCountries $allowedCountryReader = null,
         OrderAmountValidationMessage $minimumAmountMessage = null,
         QuoteValidationRuleInterface $quoteValidationRule = null,
-        RestResponse $response = null
+        // PATCH START
+        // RestResponse $response = null
+        // PATCH END
     ) {
         $this->allowedCountryReader = $allowedCountryReader ?: ObjectManager::getInstance()
             ->get(AllowedCountries::class);
@@ -69,7 +72,9 @@ class QuoteValidator
             ->get(OrderAmountValidationMessage::class);
         $this->quoteValidationRule = $quoteValidationRule ?: ObjectManager::getInstance()
             ->get(QuoteValidationRuleInterface::class);
-        $this->_response = $response ?: ObjectManager::getInstance()->get(RestResponse::class);
+        // PATCH START
+        // $this->_response = $response ?: ObjectManager::getInstance()->get(RestResponse::class);
+        // PATCH END
     }

     /**
@@ -115,7 +120,11 @@ class QuoteValidator
                 $defaultMessage .= ' %1';
             }
             if ($defaultMessage) {
-                $this->_response->setHeader('errorRedirectAction', '#shipping');
+                // PATCH START
+                //$this->_response->setHeader('errorRedirectAction', '#shipping');
+                $redirectAction = $quote->getIsVirtual() ? '#payment' : '#shipping';
+                ObjectManager::getInstance()->get(RestResponse::class)->setHeader('errorRedirectAction', $redirectAction);
+                // PATCH END
                 throw new ValidatorException(__($defaultMessage, implode(' ', $messages)));
             }
         }
