diff --git a/Model/Total/Fee.php b/Model/Total/Fee.php
index 17b47ce..0d728fb 100644
--- a/Model/Total/Fee.php
+++ b/Model/Total/Fee.php
@@ -80,6 +80,10 @@ class Fee extends Address\Total\AbstractTotal
         $baseTax = 0;
         $tax = 0;
 
+        // BEGIN PATCH
+        $rate = 0;
+        // END PATCH
+
         if ($this->helper->isEnable()) {
             $baseFee = $this->calculator->calculate($quote);
             $fee = $this->helper->getStoreFee($baseFee, $quote);
@@ -102,6 +106,12 @@ class Fee extends Address\Total\AbstractTotal
                         false,
                         true
                     );
+
+                    // BEGIN PATCH
+                    // subtract tax value from paymentFee
+                    $baseFee -= $baseTax;
+                    $fee -= $tax;
+                    // END PATCH
                 }
             }
         }
@@ -121,6 +131,11 @@ class Fee extends Address\Total\AbstractTotal
         $quote->setPaymentFeeTax($tax);
         $quote->setBasePaymentFeeTax($baseTax);
 
+        // BEGIN PATCH
+        // add paymentFee tax to correct tax group
+        $this->addTaxToTotals($rate, $total, $tax);
+        // END PATCH
+
         return $this;
     }
 
@@ -186,4 +201,52 @@ class Fee extends Address\Total\AbstractTotal
     {
         return __($this->helper->getTitle());
     }
+
+    // BEGIN PATCH
+    protected function addTaxToTotals($rate, $total, $tax)
+    {
+        if (!$rate) {
+            return;
+        }
+
+        $appliedTaxes = $total->getAppliedTaxes();
+
+        foreach ($appliedTaxes as &$appliedTax) {
+            if ($appliedTax['percent'] != $rate) {
+                continue;
+            }
+
+            $appliedTax['base_amount'] += $tax;
+            $appliedTax['amount'] += $tax;
+        }
+
+        $total->setAppliedTaxes($appliedTaxes);
+
+        $itemsAppliedTaxes = $total->getItemsAppliedTaxes();
+        $shippingItemTax = $itemsAppliedTaxes['shipping'][0] ?? null;
+
+        if (!$shippingItemTax) {
+            return;
+        }
+
+        $paymentFeeItemTax = [
+            'amount' => $tax,
+            'base_amount' => $tax,
+            'percent' => $rate,
+            'id' => $shippingItemTax['id'],
+            'rates' => $shippingItemTax['rates'],
+            'item_id' => null,
+            'item_type' => 'payment_fee',
+            'associated_item_id' => null
+
+        ];
+
+        $itemsAppliedTaxes = array_merge(
+            $itemsAppliedTaxes,
+            ['payment_fee' => [$paymentFeeItemTax]]
+        );
+
+        $total->setItemsAppliedTaxes($itemsAppliedTaxes);
+    }
+    // END PATCH
 }
